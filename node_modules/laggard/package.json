{
  "_args": [
    [
      {
        "raw": "laggard@^2.0.0",
        "scope": null,
        "escapedName": "laggard",
        "name": "laggard",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "c:\\Users\\Michi Woo\\Documents\\Informática\\Cursos\\Platzi\\Carrera Arquitecto Frontend\\Curso  de PostCSS\\PostCSS\\node_modules\\rucksack-css"
    ]
  ],
  "_from": "laggard@>=2.0.0 <3.0.0",
  "_id": "laggard@2.0.1",
  "_inCache": true,
  "_location": "/laggard",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/laggard-2.0.1.tgz_1501622269429_0.4941347651183605"
  },
  "_npmUser": {
    "name": "seaneking",
    "email": "sean@simpla.io"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "laggard@^2.0.0",
    "scope": null,
    "escapedName": "laggard",
    "name": "laggard",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rucksack-css"
  ],
  "_resolved": "https://registry.npmjs.org/laggard/-/laggard-2.0.1.tgz",
  "_shasum": "b34e87a5687788b9537e34c1b0560fed8f8c0cd9",
  "_shrinkwrap": null,
  "_spec": "laggard@^2.0.0",
  "_where": "c:\\Users\\Michi Woo\\Documents\\Informática\\Cursos\\Platzi\\Carrera Arquitecto Frontend\\Curso  de PostCSS\\PostCSS\\node_modules\\rucksack-css",
  "author": {
    "name": "Sean King",
    "email": "sean@seanking.org"
  },
  "bin": {
    "laggard": "./bin/cmd.js"
  },
  "bugs": {
    "url": "https://github.com/seaneking/laggard/issues"
  },
  "dependencies": {
    "minimist": "^1.2.0",
    "pixrem": "^4.0.1",
    "postcss": "^6.0.8",
    "postcss-color-rgba-fallback": "^3.0.0",
    "postcss-opacity": "^5.0.0",
    "postcss-pseudoelements": "^5.0.0",
    "postcss-reporter": "^5.0.0",
    "postcss-vmin": "^3.0.0",
    "postcss-will-change": "^2.0.0",
    "read-file-stdin": "^0.2.0",
    "write-file-stdout": "0.0.2"
  },
  "description": "Automatic CSS fallbacks for legacy browsers, built on PostCSS",
  "devDependencies": {
    "chai": "^4.1.0",
    "eslint": "^4.3.0",
    "mocha": "^3.5.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-XCUGeE3r3VWxM8CV9aw+GjG3v3vTInyCf3p9YUo1SCTkM4N93/JaRH/4Lpz0hDZnaEQsArtAbp+rYic3PdTpbg==",
    "shasum": "b34e87a5687788b9537e34c1b0560fed8f8c0cd9",
    "tarball": "https://registry.npmjs.org/laggard/-/laggard-2.0.1.tgz"
  },
  "engines": {
    "node": ">= 4"
  },
  "gitHead": "aca8b78a97619e8bc769e46fac406b270fae0c0f",
  "homepage": "https://github.com/seaneking/laggard",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "legacy"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "Sean King",
      "email": "sean@seanking.org",
      "url": "https://twitter.com/seaneking"
    }
  ],
  "name": "laggard",
  "optionalDependencies": {},
  "readme": "# Laggard\n[![NPM version][npm-badge]][npm-url] [![Downloads][npm-downloads]][npm-url]  [![Build Status][travis-badge]][travis-url]\n\nLaggard automatically generates safe CSS fallbacks for legacy (<IE9) browsers. It's built on [PostCSS][postcss].\n\nLaggard does not transpile future CSS syntax. For that use [cssnext][cssnext]. Laggard also doesn't do destructive transforms that would require you to use a separate stylesheet for legacy browsers. If that's what you're after use [Oldie][oldie]. \n\nUse Laggard if you just want to easily improve legacy support with your current CSS code.\n\n### Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Features](#features)\n  - [Opacity fallbacks](#opacity-fallbacks)\n  - [Rem unit fallbacks](#rem-unit-fallbacks)\n  - [Pseudo element conversions](#pseudo-element-conversions)\n  - [RGBA Hex fallbacks](#rgba-hex-fallbacks)\n  - [IE vmin to vm fallbacks](#ie-vmin-to-vm-fallbacks)\n  - [3D transform hack for will-change](#3d-transform-hack-for-will-change)\n- [Options](#options)\n\n## Install\n\nLaggard is available on NPM as `laggard`, install it with NPM or Yarn\n\n\n```sh\n$ yarn add laggard --dev\n```\n\n```sh\n$ npm i laggard --save-dev\n```\n\n## Usage\n\n###### Build tools\n\nUse Laggard as a PostCSS plugin in your build tool of choice.\n\n```js\nconst postcss = require('postcss');\nconst laggard = require('laggard');\n\npostcss([ laggard ])\n```\n\nSee [PostCSS][postcss] docs for examples for your particular environment.\n\n###### CLI\n\nProcess CSS directly on the command line\n\n```sh\n$ laggard src/style.css style.css [options]\n```\n\n###### Stylus\n\nLaggard can be used directly as a Stylus plugin with [PostStylus][poststylus]\n\n```js\nstylus(css).use(poststylus('laggard'))\n```\n\nSee the [PostStylus Docs][poststylus] for more examples for your environment.\n\n## Features\n\n#### Opacity fallbacks\n\n```css\n/* Before */\n.foo {\n  opacity: .5;\n}\n\n/* After */\n.foo {\n  opacity: .5;\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";\n}\n```\n\n#### Rem unit fallbacks\n\n```css\nhtml {\n  font-size: 16px;\n}\n\n/* Before */\n.foo {\n  font-size: 2rem;\n}\n\n/* After */\n.foo {\n  font-size: 32px;\n  font-size: 2rem;\n}\n```\n\n#### Pseudo element conversions\n\n```css\n/* Before */\n.foo::before {\n  display: block;\n}\n\n/* After */\n.foo:before {\n  display: block;\n}\n```\n\n#### RGBA Hex fallbacks\n```css\n/* Before */\n.foo {\n  background: rgba(153, 221, 153, 0.8);\n}\n\n/* After */\n.foo {\n  background: #99DD99;\n  background: rgba(153, 221, 153, 0.8);\n}\n```\n\n#### IE vmin to vm fallbacks\n```css\n/* Before */\n.foo {\n  width: 50vmin;\n}\n\n/* After */\n.foo {\n  width: 50vm;\n  width: 50vmin;\n}\n```\n\n#### 3D transform hack for will-change\n```css\n/* Before */\n.foo {\n  will-change: transform;\n}\n\n/* After */\n.foo {\n  backface-visibility: hidden;\n  will-change: transform;\n}\n```\n\n## Options\n\nAll features in Laggard can be toggled on or off by passing options on initialization. By default all features are set to `true`.\n\nOption              | Type    | Default | Description                                                     \n------------------- | ------- | ------- | -----------                                                     \n`rgba`              | Boolean | `true`  | Whether to enable RGBA fallbacks\n`opacity`           | Boolean | `true`  | Whether to enable opacity fallbacks\n`pseudo`            | Boolean | `true`  | Whether to enable pseudo element conversion\n`vmin`              | Boolean | `true`  | Whether to enable to enable vmin fallbacks\n`pixrem`            | Boolean | `true`  | Whether to enable whether to enable rem fallbacks\n`willchange`        | Boolean | `true`  | Whether to enable native will-change fallbacks\n`reporter`          | Boolean | `false` | Whether to log errors from plugins\n\n```js\n// Set in build tool, etc.\n.laggard({\n  // options\n})\n```\n\n***\n\nMIT © [Sean King](https://twitter.com/seaneking)\n\n[npm-badge]: https://badge.fury.io/js/laggard.svg\n[npm-url]: https://npmjs.org/package/laggard\n[npm-downloads]: https://img.shields.io/npm/dm/laggard.svg\n[travis-badge]: https://travis-ci.org/seaneking/laggard.svg?branch=master\n[travis-url]: https://travis-ci.org/seaneking/laggard\n[postcss]: https://github.com/postcss/postcss\n[cssnext]: http://cssnext.io/\n[poststylus]: https://github.com/seaneking/poststylus\n[oldie]: https://github.com/jonathantneal/oldie\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/seaneking/laggard.git"
  },
  "scripts": {
    "posttest": "eslint .",
    "test": "mocha test --reporter nyan"
  },
  "version": "2.0.1"
}
