{
  "_args": [
    [
      {
        "raw": "rucksack-css",
        "scope": null,
        "escapedName": "rucksack-css",
        "name": "rucksack-css",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "c:\\Users\\Michi Woo\\Documents\\Informática\\Cursos\\Platzi\\Carrera Arquitecto Frontend\\Curso  de PostCSS\\PostCSS"
    ]
  ],
  "_from": "rucksack-css@latest",
  "_id": "rucksack-css@1.0.2",
  "_inCache": true,
  "_location": "/rucksack-css",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rucksack-css-1.0.2.tgz_1501622240692_0.3708571831230074"
  },
  "_npmUser": {
    "name": "seaneking",
    "email": "sean@simpla.io"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rucksack-css",
    "scope": null,
    "escapedName": "rucksack-css",
    "name": "rucksack-css",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER",
    "/gulp-rucksack"
  ],
  "_resolved": "https://registry.npmjs.org/rucksack-css/-/rucksack-css-1.0.2.tgz",
  "_shasum": "77808b4097b35acfb92e70dc89b65aa232f5169f",
  "_shrinkwrap": null,
  "_spec": "rucksack-css",
  "_where": "c:\\Users\\Michi Woo\\Documents\\Informática\\Cursos\\Platzi\\Carrera Arquitecto Frontend\\Curso  de PostCSS\\PostCSS",
  "author": {
    "name": "Sean King",
    "email": "sean@simpla.io"
  },
  "bin": {
    "rucksack": "./bin/cmd.js"
  },
  "bugs": {
    "url": "https://github.com/simplaio/rucksack/issues"
  },
  "dependencies": {
    "autoprefixer": "^7.1.2",
    "laggard": "^2.0.0",
    "minimist": "^1.1.2",
    "postcss": "^6.0.8",
    "postcss-alias": "^2.0.0",
    "postcss-clearfix": "^2.0.1",
    "postcss-color-rgba-fallback": "^3.0.0",
    "postcss-easings": "^1.0.0",
    "postcss-fontpath": "^1.0.0",
    "postcss-hexrgba": "^1.0.0",
    "postcss-input-style": "^1.0.0",
    "postcss-opacity": "^5.0.0",
    "postcss-position": "^1.0.0",
    "postcss-pseudoelements": "^5.0.0",
    "postcss-quantity-queries": "^0.5.0",
    "postcss-reporter": "^5.0.0",
    "postcss-responsive-type": "^1.0.0",
    "postcss-vmin": "^3.0.0",
    "read-file-stdin": "^0.2.0",
    "write-file-stdout": "^0.0.2"
  },
  "description": "A little bag of CSS superpowers",
  "devDependencies": {
    "chai": "^4.1.0",
    "eslint": "^4.3.0",
    "mocha": "^3.5.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+ir3KHUb+IfCjqTsUruYZDKf95GZKhqucVridhNSuU9AsC7efqBhKtzJeMNZqc+EOND0LWBenG5ZCodKUPbL6g==",
    "shasum": "77808b4097b35acfb92e70dc89b65aa232f5169f",
    "tarball": "https://registry.npmjs.org/rucksack-css/-/rucksack-css-1.0.2.tgz"
  },
  "engines": {
    "node": ">= 0.12.0"
  },
  "gitHead": "62f0986a3ab5fde4d82a5a2a3696e38b916b31d4",
  "homepage": "https://github.com/simplaio/rucksack",
  "keywords": [
    "rucksack",
    "postcss",
    "css",
    "framework",
    "boilerplate"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "Sean King",
      "email": "sean@simpla.io",
      "url": "https://twitter.com/seaneking"
    }
  ],
  "name": "rucksack-css",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n <img src=\"http://simplaio.github.io/rucksack/logo.png\" alt=\"rucksack logo\" height=\"325\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://npmjs.org/package/rucksack-css\"><img src=\"https://img.shields.io/npm/v/rucksack-css.svg\" alt=\"NPM version\" /></a>\n  <a href=\"https://www.npmjs.com/package/rucksack-css\"><img src=\"https://img.shields.io/npm/dm/rucksack-css.svg\" alt=\"Downloads\" /></a>\n  <a href=\"https://travis-ci.org/simplaio/rucksack\"><img src=\"https://travis-ci.org/simplaio/rucksack.svg?branch=master\" alt=\"Build satus\" /></a>\n</p>\n\nA little bag of CSS superpowers, built on [PostCSS][postcss].\n\nRucksack makes CSS development less painful, with the features and shortcuts it should have come with out of the box.\n\n**Read the full docs at [simplaio.github.io](https://simplaio.github.io/rucksack)**\n\n### Contents\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Gulp](#gulp)\n  - [Grunt](#grunt)\n  - [Broccoli](#broccoli)\n  - [CLI](#cli)\n  - [PostCSS](#postcss)\n  - [Stylus](#stylus)\n- [Features](#features)\n  - [Responsive typography](#responsive-typography)\n  - [Shorthand positioning syntax](#shorthand-positioning-syntax)\n  - [Native clearfix](#native-clearfix)\n  - [Automatic font src generation](#automatic-font-src-generation)\n  - [Extra input pseudo-elements](#extra-input-pseudo-elements)\n  - [Hex shortcuts for RGBA](#hex-shortcuts-for-rgba)\n  - [More easing functions](#more-easing-functions)\n  - [Quantity pseudo-selectors](#quantity-pseudo-selectors)\n  - [CSS property aliases](#css-property-aliases)\n- [Addons](#addons)\n  - [Autoprefixer](#autoprefixer)\n  - [Legacy Fallbacks](#legacy-fallbacks)\n- [Options](#options)\n\n\n## Install\n\nRucksack is available on NPM under `rucksack-css`, install it with Yarn or NPM\n\n```sh\n$ yarn add rucksack-css --dev\n```\n\n\n```sh\n$ npm i rucksack-css --save-dev\n```\n\n## Usage\n\nRucksack can be used as a PostCSS plugin, direclty on the command line, and has helpers available for most build tools. \n\n#### Gulp\n\nUse [gulp-rucksack][gulp-rucksack]\n\n```js\nconst gulp = require('gulp');\nconst rucksack = require('gulp-rucksack');\n\ngulp.task('rucksack', () => {\n  return gulp.src('src/style.css')\n    .pipe(rucksack())\n    .pipe(gulp.dest('style.css'));\n});\n```\n\n#### Grunt\n\nUse [grunt-rucksack][grunt-rucksack]\n\n```js\nrequire('load-grunt-tasks')(grunt);\n\ngrunt.initConfig({\n\trucksack: {\n\t\tcompile: {\n\t\t\tfiles: {\n\t\t\t\t'style.css': 'src/style.css'\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('default', ['rucksack']);\n```\n\n#### Broccoli\n\nUse [broccoli-rucksack][broccoli-rucksack]\n\n```js\nconst rucksack = require('broccoli-rucksack');\n\ntree = rucksack(tree, [options]);\n```\n\n#### CLI\n\nProcess CSS directly on the command line\n\n```sh\n$ rucksack src/style.css style.css [options]\n```\n\n#### PostCSS\n\nRucksack is built on PostCSS, and can be used as a PostCSS plugin\n\n```js\nconst postcss = require('postcss');\nconst rucksack = require('rucksack-css');\n\npostcss([ rucksack() ])\n  .process(css, { from: 'src/style.css', to: 'style.css' })\n  .then(result => {\n      fs.writeFileSync('style.css', result.css);\n      if ( result.map ) fs.writeFileSync('style.css.map', result.map);\n  });\n```\n\nSee the [PostCSS Docs][postcss] for examples for your environment.\n\n#### Stylus\n\nRucksack can be used as a Stylus plugin with [PostStylus][poststylus]\n\n```js\nstylus(css).use(poststylus('rucksack-css'))\n```\n\nSee the [PostStylus Docs][poststylus] for more examples for your environment.\n\n## Features\n\n#### Responsive typography\n\nAutomagical fluid typography with new `responsive` arguments to `font-size`, `line-height`, and `letter-spacing` properties\n\n```css\n.foo {\n  font-size: responsive;\n}\n```\n\n![Responsive Type Demo][type-demo]\n\n#### Shorthand positioning syntax\n\nUse the shorthand syntax from `margin` and `padding` on `position` properties\n\n```css\n.foo {\n  position: absolute 0 20px;\n}\n```\n\n#### Native clearfix\n\nGenerate bulletproof clearfixes with a new argument on the `clear` property\n\n```css\n.foo {\n  clear: fix;\n}\n```\n\n#### Automatic font src generation\n\nAutomatically generate `src` sets for `@font-face` based on the path to your font files\n\n```css\n@font-face {\n  font-family: 'My Font';\n  font-path: '/path/to/font/file';\n}\n```\n\n#### Extra input pseudo-elements\n\nStandardize the unweidly `<input type=\"range\">` element across browsers with new `::track` and `::thumb` pseudo elements\n\n```css\ninput[type=\"range\"]::track {\n  height: 2px;\n}\n```\n\n#### Hex shortcuts for RGBA\n\nGenerate RGBA colors from a hex color + alpha value\n\n```css\n.foo {\n  color: rgba(#fff, 0.8);\n}\n```\n\n#### More easing functions\n\nUse a whole library of modern easing functions in transitions and animations\n\n```css\n.foo {\n  transition: all 250ms ease-out-cubic;\n}\n```\n\n#### Quantity pseudo-selectors\n\nCreate truly responsive designs with powerful content quantity selectors\n\n```css\nli:at-least(4) {\n  color: blue;\n}\n\nli:between(4,6) {\n  color: red;\n}\n```\n\n#### CSS property aliases\n\n```css\n@alias {\n  fs: font-size;\n  bg: background;\n}\n\n.foo {\n  fs: 16px;\n  bg: #fff;\n}\n```\n\n## Addons\n\n#### Autoprefixer\n\nAutomatically apply vendor prefixes to relevant properties based on data from [CanIUse][caniuse], via [autoprefixer][autoprefixer].\n\n#### Legacy Fallbacks\n\nAutomatically generate CSS fallbacks for legacy browsers, via [laggard][laggard].\n\n## Options\n\nAll features in Rucksack can be toggled by passing options on initialization. By default core features are set to `true`, and optional\naddons are set to `false`\n\nOption              | Type    | Default | Description                                                         \n------------------- | ------- | ------- | -----------\n`responsiveType`    | Boolean | `true`  | Whether to enable responsive typography                             \n`shorthandPosition` | Boolean | `true`  | Whether to enable shorthand position properties                     \n`quantityQueries`   | Boolean | `true`  | Whether to enable quantity query psuedo selectors                   \n`alias`             | Boolean | `true`  | Whether to enable to enable property aliases                        \n`inputPseudo`       | Boolean | `true`  | Whether to enable whether to enable extra input pseudo elements     \n`clearFix`          | Boolean | `true`  | Whether to enable native clear fix                                  \n`fontPath`          | Boolean | `true`  | Whether to enable font `src` set generation                         \n`hexRGBA`           | Boolean | `true`  | Whether to enable hex RGBA shortcuts                                \n`easings`           | Boolean | `true`  | Whether to enable extra easing functions                            \n`fallbacks`         | Boolean | `false` | Whether to enable CSS fallbacks addon                               \n`autoprefixer`      | Boolean | `false` | Whether to enable autoprefixer addon                                \n`reporter`          | Boolean | `false` | Whether to enable error reporting from plugins used inside Rucksack \n\n\n***\n\nMIT © [Sean King][sean]\n\n[postcss]: https://github.com/postcss/postcss\n[gulp-rucksack]: https://github.com/simplaio/gulp-rucksack\n[grunt-rucksack]: https://github.com/simplaio/grunt-rucksack\n[broccoli-rucksack]: https://github.com/simplaio/broccoli-rucksack\n[poststylus]: https://github.com/seaneking/poststylus\n[type-demo]: http://simplaio.github.io/rucksack/img/type-demo.gif\n[caniuse]: http://caniuse.com\n[autoprefixer]: https://github.com/postcss/autoprefixer\n[laggard]: https://github.com/seaneking/laggard\n[sean]: https://twitter.com/seaneking\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/simplaio/rucksack.git"
  },
  "scripts": {
    "posttest": "eslint .",
    "test": "mocha test --reporter nyan"
  },
  "version": "1.0.2"
}
